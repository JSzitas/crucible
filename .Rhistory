View(example2)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example2)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example2)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example2)
View(example)
View(example)
example[[1]] %>% names
View(example2)
example2[["weird_agent"]] %>% names
example2 %>% names
example %>% names
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example2)
View(example2)
View(example)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
length(example[[1]])
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example)
View(example2)
View(example)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
source("~/Desktop/crucible/experiments/n_opoly_game.R")
source("~/Desktop/crucible/experiments/n_opoly_game.R")
source("~/Desktop/crucible/R/agent_init.R")
source("~/Desktop/crucible/experiments/n_opoly_game.R")
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example)
View(example2)
source("~/Desktop/crucible/R/agent_init.R")
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example2)
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( names, function(name){ sum(name == unique_names)})
if( all( unlist(counts) == 1 )) {
return(names)
}
ambiguous <- unique_names[ which( counts > 1)]
}
c( "a","b","c" )
disambiguate_names(c("a","b","C"))
disambiguate_names(c("a","b","C", "a"))
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( names, function(name){ sum(name == unique_names)})
if( all( unlist(counts) == 1 )) {
print("here")
return(names)
}
ambiguous <- unique_names[ which( counts > 1)]
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( names, function(name){ sum(name == unique_names)})
return(counts)
if( all( unlist(counts) == 1 )) {
print("here")
return(names)
}
ambiguous <- unique_names[ which( counts > 1)]
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( unique_names, function(unique_name){ sum(names == unique_name)})
return(counts)
if( all( unlist(counts) == 1 )) {
print("here")
return(names)
}
ambiguous <- unique_names[ which( counts > 1)]
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( unique_names, function(unique_name){ sum(names == unique_name)})
if( all( unlist(counts) == 1 )) {
return(names)
}
ambiguous <- unique_names[ which( counts > 1)]
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( unique_names, function(unique_name){ sum(names == unique_name)})
if( all( unlist(counts) == 1 )) {
return(names)
}
ambiguous <- unique_names[ which( counts > 1)]
return(ambiguous)
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( unique_names, function(unique_name){ sum(names == unique_name)})
if( all( unlist(counts) == 1 )) {
return(names)
}
ambiguous <- unique_names[ which( counts > 1)]
return( purrr::map2( ambiguous, counts[counts > 1], function( name, copies ) {
paste0( name, "_", seq_len(copies), collapse = "" )
}))
return(ambiguous)
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( unique_names, function(unique_name){ sum(names == unique_name)})
if( all( unlist(counts) == 1 )) {
return(names)
}
ambiguous <- unique_names[ which( counts > 1)]
return( purrr::map2( ambiguous, counts[counts > 1], function( name, copies ) {
paste0( name, "_", seq_len(copies))
}))
return(ambiguous)
}
disambiguate_names(c("a","b","c", "a"))
?purrr::walk()
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( unique_names, function(unique_name){ sum(names == unique_name)})
if( all( unlist(counts) == 1 )) {
return(names)
}
ambiguous <- unique_names[ which( counts > 1)]
replacements <- purrr::map2( ambiguous, counts[counts > 1], function( name, copies ) {
paste0( name, "_", seq_len(copies))
})
names[ names %in% ambiguous ] <- unlist(replacements)
return(names)
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names(c("a","b","c", "a", "b"))
disambiguate_names(c("a","b","c", "a",))
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( unique_names, function(unique_name){ sum(names == unique_name)})
if( all( unlist(counts) == 1 )) {
return(names)
}
replacements <- purrr::map2(names, counts, function( name, copies ) {
if( copies == 1 ) return(name)
# otherwise
paste0( name, "_", seq_len(copies))
})
return(unlist(replacements))
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( unique_names, function(unique_name){ sum(names == unique_name)})
if( all( unlist(counts) == 1 )) {
return(names)
}
replacements <- purrr::map2(unique_names, counts, function( name, copies ) {
if( copies == 1 ) return(name)
# otherwise
paste0( name, "_", seq_len(copies))
})
return(unlist(replacements))
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map( unique_names, function(unique_name){ sum(names == unique_name)})
if( all( unlist(counts) == 1 )) {
return(names)
}
replacements <- purrr::map2(names, counts, function( name, copies ) {
if( copies == 1 ) return(name)
# otherwise
paste0( name, "_", seq_len(copies))
})
return(replacements)
return(unlist(replacements))
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
if( all( counts == 1 )) {
return(names)
}
names_with_more_than_1_count <- unique_names[counts > 1]
return(names_with_more_than_1_count)
replacements <- purrr::map2(names, counts, function( name, copies ) {
if( copies == 1 ) return(name)
# otherwise
paste0( name, "_", seq_len(copies))
})
return(unlist(replacements))
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(name)
# otherwise
paste0( name, "_", seq_len(copies))
})
return(replacements)
return(unlist(replacements))
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
return(ambiguous_by_count)
if( any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(name)
# otherwise
paste0( name, "_", seq_len(copies))
})
return(replacements)
return(unlist(replacements))
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(name)
# otherwise
paste0( name, "_", seq_len(copies))
})
return(replacements)
return(unlist(replacements))
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(name)
# otherwise
paste0( name, "_", seq_len(copies))
})
for( i in seq_len(length(names))) {
if( name[i] %in% ambiguous ) {
names[i] <- replacement[iter];
iter <- iter + 1
}
}
return(names)
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(name)
# otherwise
paste0( name, "_", seq_len(copies))
})
for( i in seq_len(length(names))) {
if( names[i] %in% ambiguous ) {
names[i] <- replacement[iter];
iter <- iter + 1
}
}
return(names)
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(NULL)
# otherwise
paste0( name, "_", seq_len(copies))
})
return(replacements)
for( i in seq_len(length(names))) {
if( names[i] %in% ambiguous ) {
names[i] <- replacements[iter];
iter <- iter + 1
}
}
return(names)
}
disambiguate_names(c("a","b","c", "a"))
disambiguate_names(c("a","b","c", "a", "b"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(NULL)
# otherwise
paste0( name, "_", seq_len(copies))
})
names(replacements) <- ambiguous
for( ambig in ambiguous ) {
names[ ambiguous ] <- replacements[ names(replacements) == ambig ]
}
return(names)
}
disambiguate_names(c("a","b","c", "a", "b"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(NULL)
# otherwise
paste0( name, "_", seq_len(copies))
})
names(replacements) <- ambiguous
for( ambig in ambiguous ) {
names[ ambiguous ] <- unlist(replacements[ names(replacements) == ambig ])
}
return(names)
}
disambiguate_names(c("a","b","c", "a", "b"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(NULL)
# otherwise
paste0( name, "_", seq_len(copies))
})
names(replacements) <- ambiguous
return(replacements)
for( ambig in ambiguous ) {
names[ ambiguous ] <- unlist(replacements[ names(replacements) == ambig ])
}
return(names)
}
disambiguate_names(c("a","b","c", "a", "b"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(NULL)
# otherwise
paste0( name, "_", seq_len(copies))
})
names(replacements) <- ambiguous
# return(replacements)
for( ambig in ambiguous ) {
print(ambig)
names[ ambiguous ] <- unlist(replacements[ names(replacements) == ambig ])
}
return(names)
}
disambiguate_names(c("a","b","c", "a", "b"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(NULL)
# otherwise
paste0( name, "_", seq_len(copies))
})
names(replacements) <- ambiguous
for( ambig in ambiguous ) {
print(ambig)
names[ names == ambiguous ] <- unlist(replacements[ names(replacements) == ambig ])
}
return(names)
}
disambiguate_names(c("a","b","c", "a", "b"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(NULL)
# otherwise
paste0( name, "_", seq_len(copies))
})
names(replacements) <- ambiguous
for( ambig in ambiguous ) {
print(ambig)
names[ names == ambig ] <- unlist(replacements[ names(replacements) == ambig ])
}
return(names)
}
disambiguate_names(c("a","b","c", "a", "b"))
disambiguate_names <- function(names) {
unique_names <- unique(names)
counts <- purrr::map_int( unique_names,
function(unique_name){ sum(names == unique_name)})
ambiguous_by_count <- counts > 1
if( !any(ambiguous_by_count) ) {
return(names)
}
ambiguous <- unique_names[ambiguous_by_count]
replacements <- purrr::map2(ambiguous, counts[ambiguous_by_count], function( name, copies ) {
if( copies == 1 ) return(NULL)
# otherwise
paste0( name, "_", seq_len(copies))
})
names(replacements) <- ambiguous
for( ambig in ambiguous ) {
# print(ambig)
names[ names == ambig ] <- unlist(replacements[ names(replacements) == ambig ])
}
return(names)
}
disambiguate_names(c("a","b","c", "a", "b"))
disambiguate_names(c("a","b","c", "a", "b", :b))
disambiguate_names(c("a","b","c", "a", "b", "b"))
disambiguate_names(c("a","b","c", "a", "b", "b", "a"))
disambiguate_names(c("a","b","c", "a", "b", "b", "a", "c"))
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example)
View(example2)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example2)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(res)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example2)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example2)
View(example2)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(example2)
source("~/Desktop/crucible/experiments/n_opoly_game.R")
View(res)
source("~/Desktop/crucible/experiments/old_implt.R")
View(staronove_ceny)
View(actual_fitness)
source("~/Desktop/crucible/experiments/old_implt.R")
View(SD)
View(P)
source("~/Desktop/crucible/experiments/old_implt.R")
dplyr::mutate
